#!/home/champoll/Python/bin/python

"""
Non-interactive spellchecker for French based on ispell / aspell.
Replaces input by most likely word suggested by ispell resp. first suggestion by aspell.
Attention: don't use this script for files that contain double quotes (")! This causes
an error that will NOT be reported. At present I don't know how to fix this problem,
it has to do with the command line string that is executed in lines 36 and 38.

"""


import sys, re, commands, tempfile
from commands import *
def run(s):
    return getoutput(s)

tmp = tempfile.gettempdir()+'/'

# hack to print something directly attached to previous
# output
def no_space_before(x):
    sys.stdout.softspace = 0
    return x
ns=no_space_before


# launch aspell/ispell with a French dictionary to look up a word.
# I know it's extremely inefficient to launch aspell/ispell for every single
# word, but I haven't been able to align the output of aspell/ispell with its
# input, so this is the safest method.
# The code for this function is somewhat verbose to make changes to it easy.

def lookup(word, mode):
    if mode == 'ispell':
        str = run('echo "'+ word + '" | ispell -d francais -a -S')
    elif mode == 'aspell':
        str = run('echo "'+ word + '" | aspell -d fr -a -S')
    else:
        raise ValueError, 'Please enter either aspell or ispell for "mode"'
    lines = str.splitlines()
    try:
       line = lines[1]
       # line now contains the relevant result of aspell/ispell for this word
       line = line.strip()
       if line == "": # word is empty string, whitespace, punctuation etc.
           return word
       if line == "*": # word is OK
           return word
       if line.startswith("+"): # word is OK, aspell/ispell returns root
           return word
       if line == "-": # word is OK, aspell/ispell detects a compound
           return word
       if (line.startswith("& ") or line.startswith("? ")):
           # spelling correction suggested
           line2 = line.split(" ")
           suggestion = line2[4]
           # remove comma
           if suggestion.endswith(","):
               suggestion = suggestion[:-1]
           return suggestion
       if line.startswith("#"):
           # unknown word, no suggestions
           #return word+"<?>"
           return word
       else:
           return word
    except:      
        return word
       

# script starts here

try:
    file = sys.argv[1]
    mode = sys.argv[2]
except:
    print 'usage: speller <inputfile> <mode>'
    print 'where mode is either aspell or ispell'
    sys.exit(1)

run('sed "s/[\.\,\:\;\!\?]/ &/g" ' + file + " | tr -s ' ' '\n' > " + tmp + "__spell__")


# tokenize text and punctuation marks in just one line!
# trick from http://simon.incutio.com/archive/2003/10/26/reSplit
# notice the parens around the whole regex 
splitter = re.compile('([ ,\.:;\!\?\'])')


for line in open(file):
    #line = line.strip() + ' \n'
    line = line.strip()
    for word in splitter.split(line):
        if word in [',', '.', ':', ';', '!', '?', "'", ' ']:
            print ns(word),
        else:
            print ns(lookup(word, mode)),
    print


