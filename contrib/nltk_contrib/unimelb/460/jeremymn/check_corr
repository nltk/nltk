#!/usr/bin/perl
# Check correctness of output of document numbers

sub abs {
	if ($_[0]>=0) {$_[0];}
	else {$_[0]*-1;}
}

$corrfile = "./corr_lans";
open(CORR,$corrfile);
@corrdocs=<CORR>;
close(CORR);

for ($thresh=200;$thresh<=700;$thresh+=50) {
$infile = "./results/skew.$thresh";
$outfile = "./results/skew.$thresh.chk";

if (!(open(IN,$infile))) {next;}
if (!(open(OUT,">$outfile"))) {print "Unable to open output file, exiting...";exit();}

while ($_=<IN>) {
$corrs=0;$incorrs=0;
@clusters=split(/\]\s*,\s*\[/);
foreach $cluster (@clusters) {
	$cluster =~ s/\[+|\]+//;
	@docs = split(/\s*,\s*/,$cluster);
	if (scalar(@docs)>1) {
		@langs=();
		foreach $doc (@docs) {
			$lang = $corrdocs[$doc-1];
			chop($lang);
			push(@langs,($lang));
		}
		@langs = sort @langs;
		for ($i=0;$i<scalar(@langs);$i++) {
			for ($j=0;$j<scalar(@langs);$j++) {
				if ($i==$j) {next;}
				if ($langs[$i] gt $langs[$j]) {next;}
				if ($langs[$i] lt $langs[$j]) {last;}
				$corrs++;
				last;
			}
		}
		for ($i=0;$i<scalar(@langs)-1;$i++) {
			if ($langs[$i] ne $langs[$i+1]) {
				$incorrs+=scalar(@langs);
				last;
			}
		}
	}
}
print OUT "Correct:$corrs\nIncorrect:$incorrs\n";
printf OUT "Metric:%2f\n",$corrs/(($incorrs+$corrs)*sqrt((&abs(scalar(@clusters)-8))+1));

}

close(IN);
close(OUT);

}

for ($thresh=20;$thresh<=70;$thresh+=5) {
$infile = "./results/rel.$thresh";
$outfile = "./results/rel.$thresh.chk";

if (!(open(IN,$infile))) {next;}
if (!(open(OUT,">$outfile"))) {print "Unable to open output file, exiting...";exit();}

while ($_=<IN>) {
$corrs=0;$incorrs=0;
@clusters=split(/\]\s*,\s*\[/);
foreach $cluster (@clusters) {
	$cluster =~ s/\[+|\]+//;
	@docs = split(/\s*,\s*/,$cluster);
	if (scalar(@docs)>1) {
		@langs=();
		foreach $doc (@docs) {
			$lang = $corrdocs[$doc-1];
			chop($lang);
			push(@langs,($lang));
		}
		@langs = sort @langs;
		for ($i=0;$i<scalar(@langs);$i++) {
			for ($j=0;$j<scalar(@langs);$j++) {
				if ($i==$j) {next;}
				if ($langs[$i] gt $langs[$j]) {next;}
				if ($langs[$i] lt $langs[$j]) {last;}
				$corrs++;
				last;
			}
		}
		for ($i=0;$i<scalar(@langs)-1;$i++) {
			if ($langs[$i] ne $langs[$i+1]) {
				$incorrs+=scalar(@langs);
				last;
			}
		}
	}
}
print OUT "Correct:$corrs\nIncorrect:$incorrs\n";
printf OUT "Metric:%2f\n",$corrs/(($incorrs+$corrs)*sqrt(&abs(scalar(@clusters)-8))+1);

}

close(IN);
close(OUT);

}
