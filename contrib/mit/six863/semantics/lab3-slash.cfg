# Natural Language Toolkit: feat2.cfg
#
# Author: Ewan Klein <ewan@inf.ed.ac.uk> 
# URL: <http://nltk.sourceforge.net>
# For license information, see LICENSE.TXT
#
# $Id:$

% start Start
############################
# Grammar Rules
#############################

Start[sem=?s] -> S[sem=?s]
Start[sem=?s] -> Q[sem=?s]

Q[sem = <app(?s, ?np)>] -> NP[+wh, sem=?np] Aux S[sem=?s]/NP
Q[sem = <app(?s, ?np)>] -> Aux S[sem=?s]/Aux
Q[sem = <app(?np, ?vp)>] -> NP[+wh, sem=?np] VP[sem=?vp]

S[sem = <(?subj ?vp)>] -> NP[-wh, sem=?subj] VP[sem=?vp]
S[sem = <\slash. (?subj (?vp slash))>]/NP -> NP[sem=?subj] VP[sem=?vp]/NP
S[sem = <\slash. (?subj (?vp slash))>]/Aux -> NP[sem=?subj] VP[sem=?vp]/Aux
S[sem = <\slash. ((?subj slash) ?vp)>]/NP -> NP[sem=?subj]/NP VP[sem=?vp]

NP[sem=<app(?det,?nom)>, wh=?w] -> Det[sem=?det, wh=?w] Nom[sem=?nom]
NP[loc=?l,sem=?np,-wh] -> PropN[loc=?l,sem=?np]

Nom[sem=?nom, wh=?w] -> N[sem=?nom, wh=?w]
Nom[sem=<app(?pp,?nom)>, wh=?w] -> N[sem=?nom, wh=?w] PP[sem=?pp]

VP[sem=<app(?v,?obj)>] -> Aux TV[sem=?v] NP[sem=?obj]
VP[sem=<app(?v,?obj)>] -> TV[sem=?v] NP[sem=?obj]
VP[sem=<\slash. (?v ?obj)>]/Aux -> TV[sem=?v] NP[sem=?obj]
VP[sem=<\slash. (?v (?obj slash))>]/NP -> TV[sem=?v] NP[sem=?obj]/NP
VP[sem=?v] -> Aux IV[sem=?v]
VP[sem=<\slash. ?v>]/Aux -> IV[sem=?v]
VP[sem=?v] -> IV[sem=?v]

VP[sem=<app(?pp,?vp)>] -> VP[sem=?vp] PP[sem=?pp]

PP[sem=<app(?p,?np)>] -> P[loc=?l,sem=?p] NP[loc=?l,sem=?np]

NP[sem=<\x. x>]/NP ->

#############################
# Lexical Rules
#############################

PropN[-loc,sem=<\P.(P john)>] -> 'John'
PropN[-loc,sem=<\P.(P mary)>] -> 'Mary'
PropN[-loc,sem=<\P.(P suzie)>] -> 'Suzie'
PropN[-loc,sem=<\P.(P fido)>] -> 'Fido'
PropN[+loc,sem=<\P.(P noosa)>] -> 'Noosa'

NP[+wh, -loc, sem=<\P. (P ?wh)>] -> 'who'  

Det[sem=<\P Q. all x. ((P x) implies (Q x))>] -> 'every'
Det[sem=<\P Q. all x. ((P x) implies (Q x))>] -> 'all'
Det[sem=<\P Q. some x. ((P x) and (Q x))>] -> 'some'
Det[sem=<\P Q. some x. ((P x) and (Q x))>] -> 'a'

N[sem=<boy>] -> 'boy' | 'boys'
N[sem=<girl>] -> 'girl' | 'girls'
N[sem=<dog>] -> 'dog' | 'dogs'

TV[sem=<\X x. (X \y. (chase x y))>] -> 'chase' | 'chases' | 'chased'
TV[sem=<\X x. (X \y. (see x y))>] -> 'see' | 'sees' | 'saw'
IV[sem=<\x. (bark x)>] -> 'bark' | 'barks' | 'barked'
IV[sem=<\x. (walk x)>] -> 'walk' | 'walks' | 'walked'

P[+loc,sem=<\X P x. (X \y. ((P x) and (in y x)))>] -> 'in'
P[-loc,sem=<\X P x. (X \y. ((P x) and (with y x)))>] -> 'with'

Aux -> 'does' | 'did' | 'do'
