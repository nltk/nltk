##////////////////////////////////////////////////////////////////////////
##  Version 0.4.1
##////////////////////////////////////////////////////////////////////////
Fri Oct 19 06:00:00 EDT 2001

- Re-implemented ChunkScore for efficiency reasons.  Added len()
  member to ChunkScore (gives the number of chunks scored).  
- Implemented pretty-printing __str__ method for CFFreqDist
- Added bins optional arg for CFFreqDist constructor, which is used 
  to generate B and Nr[0] correctly.
- Fixed HeldOutProbDist
- Implemented CrossValidationProbDist
- Added probability test code
- RETokenizers can now use negative regular expressions (specified via
  an optional arg to the RETokenizer constructor)
- RETokenizer.tokenize source arg changed to a keyword arg (this may
  change again -- we will define some standard for passing source &
  unit to tokenizers)


##////////////////////////////////////////////////////////////////////////
##  Version 0.4
##////////////////////////////////////////////////////////////////////////
Sat Oct 14 06:00:00 EDT 2001

- Changed terminology in the chart parser
- Added more meta-information in setup.py and __init__.py
- Added CHANGELOG.TXT and INSTALL.TXT files to the source distribution.
- Added a "getrule" keyword arg to SteppingChartParser.step() that
  causes it to return an (edge, rule) pair (instead of just an edge).
  This is used by nltk.draw.chart.ChartDemo
- Removed nltk.draw_tree & nltk.draw_treetoken (they are obsolete)
- Minor reference documentation fixes
- Moved ChunkedTaggedTokenizer from tagger to chunkparser.py;
  updated the implementaiton of ChunkedTaggedTokenizer to eliminate
  a bug (index was incremented for [ and ])
- Moved unchunk to chunkparser.py
- Moved chunk scoring code to chunkparser.py.  Converted scoring
  code to the ChunkScore class.  
- Major overhaul of the rechunkparser module.
- Fixed a divide-by-zero bug in Set.f_measure
- Fixed bug in WSTokenizer.xtokenize (it was ignoring source/unit)
- Added a LineTokenizer, which tokenizes a file into sentences, based
  on newline characters.
- Fixed minor docstring bug in WSTokenizer
- Changed Token to print verbose string rep from __repr__.  I've been
  going back and forth on how we should use different tostring() type
  methods.  This will all get standardized/regularized at some point.
  Probably by version 0.5
- Renamed TreeToken.location() to TreeToken.loc()
- Improvements to nltk.draw.chart, including: zooming; improved edge
  highlighting; root window for ChartView constructor is now optional; 
  control over whether the tree-view & source-view frames should be
  shown; text field that displays the rule that generated the last
  edge; different default test grammar/string.  Several bug fixes.
- Improvements to nltk.draw.plot_graph and nltk.draw.tree_edit
- Changed all imports of nltk modules to use full names (e.g.
  "nltk.token" instead of just "token")


##////////////////////////////////////////////////////////////////////////
##  Version 0.3
##////////////////////////////////////////////////////////////////////////

- Added a copy of the IBM CPL in LICENSE.TXT
- Major reorganization to the chart parser: 
    - added a new StrategyClass, which enocdes a strategy
    - formalized the notions of chart rule & strategy in the
      comments/documentation.
    - Divided rules into "static" rules and "edge-triggered" (or
      "dynamic") rules.
    - Changed rules from methods to functions, to facilitate
      user-definition of new rules.
    - Defined standard chart-parsing strategies
    - wrote a new implementation of the stepping chart parser.
    - replaced Edge.children with Edge.tree
    - Added a length operator definition for Chart
    - cleaned up the edge class
- Renamed ParserI.parseTypes to ParserI.parse_types (to be
  consistant with our naming conventions)
- Changed printed representations of frequency distributions to
  make it more likely that students won't confuse them with
  dictionaries.
- Renamed Rule.dotted to Rule.drule (for consistancy with
  ChartParser)
- Impoved printed repr functions for Rule
- Minor docstring/comment fixes
- Added a template for a shift-reduce parser
- Renamed TreeToken.location() to TreeToken.loc()
- Added a children() accessor to both Tree and TreeToken
- Updated nltk.draw.chart in response to changes in
  nltk.chartparser
- Improved nltk.draw.chart.ChartDemo: implemented tree view;
  added a way to view rules.
- Initial import of draw.tree_edit, a module for drawing and
  editing Trees and TreeTokens.

##////////////////////////////////////////////////////////////////////////
##  Version 0.2
##////////////////////////////////////////////////////////////////////////

- Updated reference documentation strings
- Added cond_samples to frequency distributions
- Fixed Nr method of frequency distributions
- Fixed bug in SimpleFreqDist.cond_max
- Changed implementation of CFFreqDist to use a dictionary of
  SimpleFreqDists, instead of a dictionary of dictionaries.
- Added a preliminary implementation of a probability distribution
  that uses held-out data.
- Added untag() and accuracy() methods to nltk.tagger, for testing
  taggers.  
- Cleaned up BackoffTagger implementation
- Fixed minor bug in BackoffTagger: it had incorrect behavior if all
  of the taggers returned UNK for any token.
- Added UnigramTagger
- Fixed bugs in comparison methods for TaggedType.
- Changed parseTaggedType to convert tags to upper case.
- Added xtokenize() methods to WSTokenizer and RETokenizer (and
  associated class _XTokenTuple, which is the actual return type of
  the xtokenize methods).  This method is analagous to xrange() or
  xreadlines() -- it only constructs tokens as they are requested.
  This can result in much more memory-efficient use of tokenized
  texts. 
- Fixed minor bugs in Location.__str__ that was causing it to not print
  sources-of-sources 
- Fixed bug in Token repre function, that used != instead of "is not"
  to compare to None.
- Fixed minor bug in RETokenizer caused unwanted behavior if the
  regexp didn't match anything in the text at all.
- Fixed code for drawing trees; added a new module, draw.tree, based
  on the old draw_tree and draw_token modules, for displaying trees.
- Fixed bug in draw.plot_graph that caused log-log plots of integer
  values to get quantized in an unreasonable way
- Added some more unit testing test cases
- In the chartparser, broke BU_init_step into BU_init_edge_step and
  BU_init_step (for the latter, you don't have to specify which edge
  to use). 

##////////////////////////////////////////////////////////////////////////
##  Version 0.1
##////////////////////////////////////////////////////////////////////////

- Initial release
