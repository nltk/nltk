NLTK Chart Parser for Combinatory Categorial Grammars
=====================================================
Graeme Gange
=====================================================
Usage:
The lexicon is constructed by calling
  ccglexicon.parseLexicon(<lexicon string>).

In order to construct a parser, you also need a rule set.
The standard English rules are provided in ccgparser as 
  ccgparser.DefaultRuleSet

The parser can then be constructed by calling, for example:
  parser = ccgparser.CCGChartParser(<lexicon>,<ruleset>)

Parsing is then performed by running
  parser.nbest_parse(<sentence>.split())

While this returns a list of trees, the default representation
of the produced trees is not very enlightening, particularly
given that it uses the same tree class as the CFG parsers.
It is probably better to call:
  ccgparser.printCCGDerivation(<parse tree extracted from list>)
which should print a nice representation of the derivation.

This entire process is shown far more clearly in demonstration.py.
