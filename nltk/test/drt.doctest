================================
 Discourse Representation Theory
================================

.. include:: ../../doc/definitions.txt

A DRS is created with ``DRS()``. This takes two arguments: a list of
discourse referents and list of conditions. 

    >>> from nltk_contrib.drt import DRT
    >>> dp = DRT.Parser()
    >>> man_x = dp.parse('(man x)')
    >>> walk_x = dp.parse('(walks x)')
    >>> x = dp.parse('x')
    >>> drs1 = DRT.DRS([x], [man_x, walk_x])
    >>> drs1
    DRS([x],[(man x),(walks x)])

The ``parse()`` method can also be applied directly to DRS
expressions, which allows them to be specified more
easily.

    >>> drs1 = dp.parse('DRS([x],[(man x),(walks x)])')
    >>> drs1
    DRS([x],[(man x),(walks x)])

DRSs can be *merged* using the ``+`` operator.

    >>> drs2 = dp.parse('DRS([y],[(woman y),(stops y)])')
    >>> drs3 = drs1 + drs2
    >>> drs3.simplify()
    DRS([x,y],[(man x),(walks x),(woman y),(stops y)])

We can embed DRSs as components of an ``implies`` condition.

    >>> s = 'DRS([], [(%s implies %s)])' % (drs1, drs2)
    >>> dp.parse(s).infixify()
    DRS([],[(DRS([x],[(man x),(walks x)]) implies DRS([y],[(woman y),(stops y)]))])
