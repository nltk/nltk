# Natural Language Toolkit: feat2.cfg
#
# Author: Ewan Klein <ewan@inf.ed.ac.uk> 
# URL: <http://nltk.sourceforge.net>
# For license information, see LICENSE.TXT
#
# $Id:$

% start S
############################
# Grammar Rules
#############################

S[sem = <app(?subj,?vp)>] -> NP[sem=?subj] VP[sem=?vp]

NP[sem=<app(?det,?nom)> ] -> Det[sem=?det]  Nom[sem=?nom]
NP[loc=?l,sem=?np] -> PropN[loc=?l,sem=?np]

Nom[sem=?nom] -> N[sem=?nom]
Nom[sem=<app(?pp,?nom)>] -> N[sem=?nom] PP[sem=?pp]

VP[sem=<app(?v,?obj)>] -> TV[sem=?v] NP[sem=?obj]
VP[sem=?v] -> IV[sem=?v]

VP[sem=<app(?pp,?vp)>] -> VP[sem=?vp] PP[sem=?pp]

PP[sem=<app(?p,?np)>] -> P[loc=?l,sem=?p] NP[loc=?l,sem=?np]

#############################
# Lexical Rules
#############################

PropN[-loc,sem=<\P.(P john)>] -> 'John'
PropN[-loc,sem=<\P.(P mary)>] -> 'Mary'
PropN[-loc,sem=<\P.(P suzie)>] -> 'Suzie'
PropN[-loc,sem=<\P.(P fido)>] -> 'Fido'
PropN[+loc, sem=<\P.(P noosa)>] -> 'Noosa'

NP[-loc, sem=<\P.\x.(P x)>] -> 'who'  

Det[sem=<\P Q. all x. ((P x) implies (Q x))>] -> 'every'
Det[sem=<\P Q. all x. ((P x) implies (Q x))>] -> 'all'
Det[sem=<\P Q. some x. ((P x) and (Q x))>] -> 'some'
Det[sem=<\P Q. some x. ((P x) and (Q x))>] -> 'a'

N[sem=<boy>] -> 'boy' | 'boys'
N[sem=<girl>] -> 'girl' | 'girls'
N[sem=<dog>] -> 'dog' | 'dogs'

TV[sem=<\X y. (X \x. (chase x y))>] -> 'chase' | 'chases'
TV[sem=<\X y. (X \x. (see x y))>] -> 'see' | 'sees'
IV[sem=<\x. (bark x)>] -> 'bark' | 'barks'
IV[sem=<\x. (walk x)>] -> 'walk' | 'walks'

P[+loc,sem=<\X P x. (X \y. ((P x) and (in y x)))>] -> 'in'
P[-loc,sem=<\X P x. (X \y. ((P x) and (with y x)))>] -> 'with'

